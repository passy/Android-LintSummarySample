task hasLintSummaryExecutable(type: Exec) {
    commandLine "which", "android-lint-summary"
    ignoreExitValue true

    ext.hasExecutable = {
        execResult?.getExitValue() == 0
    }
}

task lintSummary(type: LintSummaryTask, dependsOn: hasLintSummaryExecutable) {
    description "Print a summary of your lint issues"
    group JavaBasePlugin.VERIFICATION_GROUP

    outputs.upToDateWhen { false }
    onlyIf { gradle.startParameter.colorOutput && hasLintSummaryExecutable.hasExecutable() }
}


afterEvaluate {
    tasks.withType(tasks['lint'].class) {
        finalizedBy lintSummary
    }

    gradle.addBuildListener(lintSummary)
}

class LintSummaryTask extends DefaultTask implements BuildListenerAdapter {
    def stdout = new ByteArrayOutputStream()
    def didExec = false

    @SuppressWarnings("GroovyUnusedDeclaration")
    @TaskAction
    public def action() {
        project.exec {
            def outputStream = new ByteArrayOutputStream()
            commandLine "android-lint-summary", "-v"
            standardOutput = stdout
        }
        didExec = true
    }

    @Override
    void buildFinished(BuildResult result) {
        println stdout.toString()

        if (!didExec) {
            println """
For prettier display of lint errors, install `android-lint-summary`.

echo "/home/phartig/tools/android-lint-summary" >> ~/.tools
synd-dottools.sh

Learn more at go/als.
            """.stripMargin()
        }
    }
}

trait BuildListenerAdapter implements BuildListener {
    @Override
    void buildFinished(BuildResult result) {

    }

    @Override
    void buildStarted(Gradle gradle) {

    }

    @Override
    void projectsEvaluated(Gradle gradle) {

    }

    @Override
    void projectsLoaded(Gradle gradle) {

    }

    @Override
    void settingsEvaluated(Settings settings) {

    }
}
